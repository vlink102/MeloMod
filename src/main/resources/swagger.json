{
  "openapi": "3.0.3",
  "info": {
    "title": "Hypixel Public API",
    "x-logo": {
      "url": "https://api.hypixel.net/assets/images/logo.png",
      "altText": "Hypixel Logo",
      "href": "#"
    },
    "description": "# Introduction\nThis is the official Hypixel API documentation. [Hypixel Website](https://hypixel.net/) - [GitHub Repo](https://github.com/HypixelDev/PublicAPI) - [API Help Forum](https://hypixel.net/forums/api-help.111/)\n\nAll use of the API must conform to the [API policies](https://developer.hypixel.net/policies), violation of these policies may lead to applications being revoked or users banned from the API.\n## Limits\nAPI keys are limited to a maximum amount of requests per 5 minute intervals. These limits will depend on the type of application that the key is assigned to.\n\nEndpoints which require the use of an API key will also respond with headers to assist with managing the rate limit:\n- 'RateLimit-Limit' - The limit of requests per minute for the provided API key.\n- 'RateLimit-Remaining' - The remaining amount of requests allowed for the current minute.\n- 'RateLimit-Reset' - The amount of seconds until the next minute and the reset of the API key usages.\n\n## GameTypes\n| ID | Type Name      | Database Name | Clean Name           |\n |----|----------------|---------------|----------------------|\n | 2  | QUAKECRAFT     | Quake         | Quake                |\n | 3  | WALLS          | Walls         | Walls                |\n | 4  | PAINTBALL      | Paintball     | Paintball            |\n | 5  | SURVIVAL_GAMES | HungerGames   | Blitz Survival Games |\n | 6  | TNTGAMES       | TNTGames      | TNT Games            |\n | 7  | VAMPIREZ       | VampireZ      | VampireZ             |\n | 13 | WALLS3         | Walls3        | Mega Walls           |\n | 14 | ARCADE         | Arcade        | Arcade               |\n | 17 | ARENA          | Arena         | Arena                |\n | 20 | UHC            | UHC           | UHC Champions        |\n | 21 | MCGO           | MCGO          | Cops and Crims       |\n | 23 | BATTLEGROUND   | Battleground  | Warlords             |\n | 24 | SUPER_SMASH    | SuperSmash    | Smash Heroes         |\n | 25 | GINGERBREAD    | GingerBread   | Turbo Kart Racers    |\n | 26 | HOUSING        | Housing       | Housing              |\n | 51 | SKYWARS        | SkyWars       | SkyWars              |\n | 52 | TRUE_COMBAT    | TrueCombat    | Crazy Walls          |\n | 54 | SPEED_UHC      | SpeedUHC      | Speed UHC            |\n | 55 | SKYCLASH       | SkyClash      | SkyClash             |\n | 56 | LEGACY         | Legacy        | Classic Games        |\n | 57 | PROTOTYPE      | Prototype     | Prototype            |\n | 58 | BEDWARS        | Bedwars       | Bed Wars             |\n | 59 | MURDER_MYSTERY | MurderMystery | Murder Mystery       |\n | 60 | BUILD_BATTLE   | BuildBattle   | Build Battle         |\n | 61 | DUELS          | Duels         | Duels                |\n | 63 | SKYBLOCK       | SkyBlock      | SkyBlock             |\n | 64 | PIT            | Pit           | Pit                  |\n | 65 | REPLAY         | Replay        | Replay               |\n | 67 | SMP            | SMP           | SMP                  |\n | 68 | WOOL_GAMES     | WoolGames     | Wool Wars            |\n\n### Storage\nGames store their respective stats and data in a Player's `stats` collection. The game's specific data is held within a JSON object named after it's `Database Name` (seen above.)\n### GameType Notes\n* Clean names are what is displayed to the user when referencing the name.\n* Database names or IDs are used when the API references a specific GameType.\n## Notes\n\n### Date and Time\nGenerally dates are stored as a Unix Epoch times in milliseconds.\n### Response Format\nResponses are served in JSON format.\n### UUID Parameters\nAll uuid parameters support both dashed and undashed versions.\n### SkyBlock items and inventories\nItems and inventory data are stored as a base64 encoded string containing gzipped nbt data.\nIf a method is missing important information about an item or inventory, you should try checking this!\n>Note: the base64 string may contain a unicode escape for non-alphabetical symbols, and some programming languages may have silent defects when interpreting the string. \n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "version": "v2",
    "termsOfService": "https://hypixel.net/tos",
    "contact": {
      "name": "Hypixel Support",
      "url": "https://developer.hypixel.net"
    }
  },
  "servers": [
    {
      "url": "https://api.hypixel.net"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "API-Key",
        "description": "Obtained via the [Hypixel Developer Dashboard](https://developer.hypixel.net) when creating an application. You can also request higher limits for production applications in this dashboard."
      }
    },
    "responses": {
      "DataMissing": {
        "description": "Some data is missing, this is usually a field.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "cause": {
                  "type": "string",
                  "example": "Missing one or more fields [...]"
                }
              }
            }
          }
        }
      },
      "InvalidKey": {
        "description": "Access is forbidden, usually due to an invalid API key being used.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "cause": {
                  "type": "string",
                  "example": "Invalid API key"
                }
              }
            }
          }
        }
      },
      "RateLimited": {
        "description": "A request limit has been reached, usually this is due to the limit on the key being reached but can also be triggered by a global throttle.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "cause": {
                  "type": "string",
                  "example": "Key throttle"
                },
                "throttle": {
                  "type": "boolean",
                  "example": true
                },
                "global": {
                  "type": "boolean",
                  "description": "When this boolean exists and is true, the throttle occurring is a global throttle applied to all users",
                  "example": true
                }
              }
            }
          }
        }
      },
      "InvalidPage": {
        "description": "The page provided is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "cause": {
                  "type": "string",
                  "example": "Invalid page"
                }
              }
            }
          }
        }
      },
      "MissingPage": {
        "description": "The page provided does not exist.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "cause": {
                  "type": "string",
                  "example": "Page not found"
                }
              }
            }
          }
        }
      },
      "MalformedData": {
        "description": "Some data provided is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "cause": {
                  "type": "string",
                  "example": "Malformed UUID"
                }
              }
            }
          }
        }
      },
      "NotPopulated": {
        "description": "The data is not yet populated and should be available shortly",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "cause": {
                  "type": "string",
                  "example": "Leaderboard data has not yet been populated"
                }
              }
            }
          }
        }
      },
      "NoResult": {
        "description": "The request responded with no result.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "cause": {
                  "type": "string",
                  "example": "No result was found"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "Booster": {
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "purchaserUuid": {
            "type": "string",
            "format": "uuid",
            "example": "ad8fefaa8351454bb739a4eaa872173f"
          },
          "amount": {
            "type": "number"
          },
          "originalLength": {
            "type": "integer"
          },
          "length": {
            "type": "integer"
          },
          "gameType": {
            "type": "integer"
          },
          "dateActivated": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ActiveBooster": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Booster"
          },
          {
            "type": "object",
            "properties": {
              "stacked": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string",
                  "description": "UUID of the player in a dashed format",
                  "format": "uuid",
                  "example": "ad8fefaa-8351-454b-b739-a4eaa872173f"
                }
              }
            }
          }
        ]
      },
      "QueuedBooster": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Booster"
          },
          {
            "type": "object",
            "properties": {
              "stacked": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        ]
      },
      "SkyBlockAuction": {
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid"
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          },
          "auctioneer": {
            "type": "string",
            "format": "uuid"
          },
          "profile_id": {
            "type": "string",
            "format": "uuid"
          },
          "coop": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "start": {
            "type": "number",
            "format": "int64"
          },
          "end": {
            "type": "number",
            "format": "int64"
          },
          "item_name": {
            "type": "string"
          },
          "item_lore": {
            "type": "string"
          },
          "extra": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "tier": {
            "type": "string"
          },
          "starting_bid": {
            "type": "number"
          },
          "item_bytes": {
            "type": "object",
            "properties": {
              "type": {
                "type": "number"
              },
              "data": {
                "type": "string"
              }
            }
          },
          "claimed": {
            "type": "boolean"
          },
          "claimed_bidders": {
            "type": "array"
          },
          "highest_bid_amount": {
            "type": "number"
          },
          "bids": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "auction_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "bidder": {
                  "type": "string",
                  "format": "uuid"
                },
                "profile_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "amount": {
                  "type": "number"
                },
                "timestamp": {
                  "type": "number",
                  "format": "int64"
                }
              }
            }
          }
        },
        "example": {
          "uuid": "409a1e0f261a49849493278d6cd9305a",
          "auctioneer": "347ef6c1daac45ed9d1fa02818cf0fb6",
          "profile_id": "347ef6c1daac45ed9d1fa02818cf0fb6",
          "coop": [
            "347ef6c1daac45ed9d1fa02818cf0fb6"
          ],
          "start": 1573760802637,
          "end": 1573761102637,
          "item_name": "Azure Bluet",
          "item_lore": "§f§lCOMMON",
          "extra": "Azure Bluet Red Rose",
          "category": "blocks",
          "tier": "COMMON",
          "starting_bid": 1,
          "item_bytes": {
            "type": 0,
            "data": "H4sIAAAAAAAAAB2NQQqCQBhGv1ErHaKu0KoLtGtnarRIhTpA/OGfDIwZ4wxUF/IeHiyyto/3eBKIIJQEIDx4qsJaYJK07m6FhG+p9hEdVMV7TXU3Wh+JWaW6h6ZXhODYGg5/LeZDfxt6nZR5XhYhgoIaxmKE8dsZXu20YwuJZfa0hmJrjbo6y134f8pTll5O5TnbbgAP05Qaqhk+8AVIrd2eoAAAAA=="
          },
          "claimed": true,
          "claimed_bidders": [],
          "highest_bid_amount": 7607533,
          "bids": [
            {
              "auction_id": "409a1e0f261a49849493278d6cd9305a",
              "bidder": "99748e629dee463892f68abf3a780094",
              "profile_id": "99748e629dee463892f68abf3a780094",
              "amount": 7607533,
              "timestamp": 1573760824844
            }
          ]
        }
      },
      "SkyBlockProfile": {
        "properties": {
          "profile_id": {
            "type": "string",
            "format": "uuid"
          },
          "members": {
            "description": "A map of member UUIDs to member profiles objects",
            "type": "object",
            "properties": {
              "player_id": {
                "type": "string",
                "format": "uuid"
              },
              "profile": {
                "type": "object",
                "properties": {
                  "deletion_notice": {
                    "description": "If this field exists, the member profile is marked as deleted",
                    "nullable": true,
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }
          },
          "cute_name": {
            "description": "The cute name of the profile, only provided on the profiles endpoint",
            "nullable": true,
            "type": "string"
          },
          "selected": {
            "description": "Whether or not this is the currently selected profile, only provided on the profiles endpoint",
            "nullable": true,
            "type": "boolean"
          },
          "community_upgrades": {
            "nullable": true,
            "type": "object"
          },
          "banking": {
            "description": "Information about the bank account for this profile, only present if the API banking setting is enabled",
            "nullable": true,
            "type": "object",
            "properties": {
              "balance": {
                "type": "number",
                "format": "double"
              },
              "transactions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "DEPOSIT",
                        "WITHDRAW"
                      ]
                    },
                    "initiator_name": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              }
            }
          },
          "game_mode": {
            "description": "The SkyBlock game mode of the profile, not present if normal mode",
            "nullable": true,
            "type": "string",
            "enum": [
              "ironman",
              "island",
              "bingo"
            ]
          }
        }
      },
      "SkyBlockItem": {
        "properties": {
          "id": {
            "description": "The unique identifier for this item",
            "type": "string"
          },
          "material": {
            "description": "The Bukkit material enum value for the item",
            "type": "string"
          },
          "name": {
            "description": "The name of the item",
            "type": "string"
          },
          "tier": {
            "description": "The rarity tier of the item",
            "type": "string",
            "enum": [
              "COMMON",
              "UNCOMMON",
              "RARE",
              "EPIC",
              "LEGENDARY",
              "MYTHIC",
              "SUPREME",
              "SPECIAL",
              "VERY_SPECIAL"
            ]
          },
          "color": {
            "description": "The color metadata to be applied to an item, usually leather armor pieces",
            "pattern": "^(?:(?:^|,\\s*)([01]?\\d\\d?|2[0-4]\\d|25[0-5])){3}$",
            "type": "string"
          },
          "skin": {
            "description": "The skin value for a skull based item",
            "type": "string"
          }
        },
        "example": {
          "material": "LEATHER_CHESTPLATE",
          "color": "255,215,0",
          "name": "Farm Armor Chestplate",
          "category": "CHESTPLATE",
          "tier": "RARE",
          "stats": {
            "DEFENSE": 75,
            "HEALTH": 20
          },
          "npc_sell_price": 5200,
          "id": "FARM_ARMOR_CHESTPLATE"
        }
      },
      "SkyBlockMuseum": {
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "appraisal": {
            "type": "boolean"
          },
          "items": {
            "type": "object"
          },
          "special": {
            "type": "array",
            "properties": {
              "donated_time": {
                "type": "integer",
                "format": "int64"
              },
              "items": {
                "type": "object"
              }
            }
          }
        }
      },
      "Game": {
        "description": "Information about a specific game. When a field is not present you should fallback to the provided default if there is one, required fields will always exist.",
        "required": [
          "id",
          "name",
          "databaseName"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The backend ID of the game.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The display name of the game.",
            "example": "Bed Wars"
          },
          "databaseName": {
            "type": "string",
            "description": "The key used for database storage, such as for stats.",
            "example": "Bedwars"
          },
          "modeNames": {
            "type": "object",
            "description": "A map of mode key to display name",
            "example": {
              "solo_normal": "Solo",
              "team_normal": "Doubles"
            }
          },
          "retired": {
            "type": "boolean",
            "description": "True if the game is retired and no longer playable.",
            "default": false
          },
          "legacy": {
            "type": "boolean",
            "description": "True if the game is legacy and part of the Classic Lobby.",
            "default": false
          }
        },
        "example": {
          "id": 58,
          "name": "Bed Wars",
          "databaseName": "Bedwars",
          "modeNames": {
            "BEDWARS_TWO_FOUR": "4v4",
            "BEDWARS_EIGHT_ONE": "Solo"
          }
        }
      },
      "SkyBlockFireSale": {
        "properties": {
          "item_id": {
            "description": "The SkyBlock item ID for this sale",
            "type": "string"
          },
          "start": {
            "description": "The start time in unix milliseconds for the sale",
            "type": "number"
          },
          "end": {
            "description": "The end time in unix milliseconds for the sale",
            "type": "number"
          },
          "amount": {
            "description": "The amount of items available for this sale",
            "type": "integer"
          },
          "price": {
            "description": "The price in Gems for this sale",
            "type": "integer"
          }
        }
      },
      "SkyBlockGarden": {
        "description": "Information about a player's SkyBlock garden, the only guaranteed field is the `uuid` field.",
        "required": [
          "uuid"
        ],
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "The UUID of the profile for this garden."
          },
          "commission_data": {
            "type": "object",
            "properties": {
              "visits": {
                "type": "object",
                "description": "A map of visitor identifier to visit count",
                "example": {
                  "jerry": 1,
                  "jacob": 2,
                  "andrew": 3
                }
              },
              "completed": {
                "type": "object",
                "description": "A map of visitor identifier to completed count",
                "example": {
                  "jerry": 1,
                  "jacob": 1,
                  "andrew": 2
                }
              },
              "total_completed": {
                "type": "integer",
                "format": "int32"
              },
              "unique_npcs_served": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "composter_data": {
            "type": "object",
            "example": {
              "organic_matter": 1772.8,
              "fuel_units": 17000,
              "compost_units": 0,
              "compost_items": 2,
              "conversion_ticks": 300,
              "last_save": 1721039418436,
              "upgrades": {
                "speed": 25,
                "multi_drop": 25,
                "fuel_cap": 22,
                "organic_matter_cap": 25,
                "cost_reduction": 25
              }
            }
          },
          "active_commissions": {
            "type": "object",
            "example": {
              "liam": {
                "requirement": [
                  {
                    "original_item": "NETHER_STALK",
                    "original_amount": 93995,
                    "item": "MUTANT_NETHER_STALK",
                    "amount": 4
                  }
                ],
                "status": "NOT_STARTED",
                "position": 1
              },
              "lumberjack": {
                "requirement": [
                  {
                    "original_item": "POTATO_ITEM",
                    "original_amount": 81380,
                    "item": "ENCHANTED_BAKED_POTATO",
                    "amount": 3
                  }
                ],
                "status": "NOT_STARTED",
                "position": 2
              },
              "oringo": {
                "requirement": [
                  {
                    "original_item": "WHEAT",
                    "original_amount": 26798,
                    "item": "ENCHANTED_HAY_BLOCK",
                    "amount": 21
                  }
                ],
                "status": "NOT_STARTED",
                "position": 3
              },
              "rhys": {
                "requirement": [
                  {
                    "original_item": "JACK_O_LANTERN",
                    "original_amount": 512,
                    "item": "JACK_O_LANTERN",
                    "amount": 512
                  }
                ],
                "status": "NOT_STARTED",
                "position": 4
              },
              "fear_mongerer": {
                "requirement": [
                  {
                    "original_item": "PUMPKIN",
                    "original_amount": 27709,
                    "item": "POLISHED_PUMPKIN",
                    "amount": 1
                  }
                ],
                "status": "NOT_STARTED",
                "position": 5,
                "extra_rewards": [
                  {
                    "candy": "PURPLE_CANDY"
                  }
                ]
              }
            }
          },
          "resources_collected": {
            "type": "object",
            "description": "A map of resource ID to amount collected",
            "example": {
              "WHEAT": 100,
              "POTATO_ITEM": 100,
              "INK_SACK:3": 100
            }
          },
          "crop_upgrade_levels": {
            "type": "object",
            "example": {
              "WHEAT": 1,
              "POTATO_ITEM": 2,
              "INK_SACK:3": 3
            }
          },
          "unlocked_plots_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "beginner_1",
              "intermediate_3"
            ]
          },
          "garden_experience": {
            "type": "integer",
            "format": "double"
          },
          "unlocked_barn_skins": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "selected_barn_skin": {
            "type": "string"
          }
        }
      },
      "HousingHouse": {
        "description": "Information about a player's house. This data may be cached for a short period of time.",
        "required": [
          "uuid",
          "owner",
          "name",
          "createdAt",
          "players",
          "cookies"
        ],
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "The UUID of this house."
          },
          "owner": {
            "type": "string",
            "format": "uuid",
            "description": "The UUID of the owner of this house."
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "The name of this house, may contain Minecraft color symbols."
          },
          "createdAt": {
            "type": "number",
            "format": "int64",
            "description": "The time this house was created."
          },
          "players": {
            "type": "number",
            "format": "int32",
            "description": "The number of players in this house."
          },
          "cookies": {
            "type": "object",
            "properties": {
              "current": {
                "type": "number",
                "format": "int32",
                "description": "The current amount of cookies that this house has for the current week."
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/v2/player": {
      "get": {
        "summary": "Data of a specific player, including game stats",
        "tags": [
          "Player Data"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get player's data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "player": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "example": "3fa85f6457174562b3fc2c963f66afa6"
                        },
                        "displayname": {
                          "type": "string",
                          "nullable": true
                        },
                        "rank": {
                          "type": "string",
                          "nullable": true,
                          "enum": [
                            "ADMIN",
                            "MODERATOR",
                            "HELPER",
                            "NORMAL"
                          ]
                        },
                        "packageRank": {
                          "type": "string",
                          "nullable": true,
                          "enum": [
                            "MVP_PLUS",
                            "MVP",
                            "VIP_PLUS",
                            "VIP",
                            "NONE"
                          ]
                        },
                        "newPackageRank": {
                          "type": "string",
                          "nullable": true,
                          "enum": [
                            "MVP_PLUS",
                            "MVP",
                            "VIP_PLUS",
                            "VIP",
                            "NONE"
                          ]
                        },
                        "monthlyPackageRank": {
                          "type": "string",
                          "nullable": true,
                          "enum": [
                            "SUPERSTAR",
                            "NONE"
                          ]
                        },
                        "firstLogin": {
                          "type": "number",
                          "nullable": true
                        },
                        "lastLogin": {
                          "type": "number",
                          "nullable": true
                        },
                        "lastLogout": {
                          "type": "number",
                          "nullable": true
                        },
                        "stats": {
                          "type": "object",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DataMissing"
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/recentgames": {
      "get": {
        "summary": "The recently played games of a specific player",
        "tags": [
          "Player Data"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get player's recent game",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "uuid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "games": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "number",
                            "format": "int64"
                          },
                          "gameType": {
                            "type": "string"
                          },
                          "mode": {
                            "type": "string"
                          },
                          "map": {
                            "type": "string"
                          },
                          "ended": {
                            "type": "number",
                            "format": "int64"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DataMissing"
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "422": {
            "$ref": "#/components/responses/MalformedData"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/status": {
      "get": {
        "summary": "The current online status of a specific player",
        "tags": [
          "Player Data"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get player status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ad8fefaa8351454bb739a4eaa872173f"
                    },
                    "session": {
                      "type": "object",
                      "properties": {
                        "online": {
                          "type": "boolean"
                        },
                        "gameType": {
                          "type": "string"
                        },
                        "mode": {
                          "type": "string"
                        },
                        "map": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DataMissing"
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/guild": {
      "get": {
        "summary": "Retrieve a Guild by a player, id, or name",
        "tags": [
          "Player Data"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "objectid"
            }
          },
          {
            "in": "query",
            "name": "player",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get guild information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "guild": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DataMissing"
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/resources/games": {
      "get": {
        "summary": "Game Information",
        "description": "Returns information about Hypixel Games. This endpoint is in early development and we are working to add more information when possible <a href=\"https://github.com/HypixelDev/PublicAPI/discussions/197#discussioncomment-1047648\">HypixelDev/PublicAPI#197</a>",
        "tags": [
          "Resources"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number"
                    },
                    "games": {
                      "type": "object",
                      "description": "A map where the key is the backend name of the game",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/Game"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/resources/achievements": {
      "get": {
        "summary": "Achievements",
        "tags": [
          "Resources"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number"
                    },
                    "achievements": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/resources/challenges": {
      "get": {
        "summary": "Challenges",
        "tags": [
          "Resources"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number"
                    },
                    "challenges": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/resources/quests": {
      "get": {
        "summary": "Quests",
        "tags": [
          "Resources"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number"
                    },
                    "quests": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/resources/guilds/achievements": {
      "get": {
        "summary": "Guild Achievements",
        "tags": [
          "Resources"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number"
                    },
                    "one_time": {
                      "type": "object"
                    },
                    "tiered": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/resources/vanity/pets": {
      "get": {
        "summary": "Vanity Pets",
        "tags": [
          "Resources"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number"
                    },
                    "types": {
                      "type": "object"
                    },
                    "rarities": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/resources/vanity/companions": {
      "get": {
        "summary": "Vanity Companions",
        "tags": [
          "Resources"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number"
                    },
                    "types": {
                      "type": "object"
                    },
                    "rarities": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/resources/skyblock/collections": {
      "get": {
        "summary": "Collections",
        "description": "Information regarding Collections in the SkyBlock game.",
        "tags": [
          "SkyBlock"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number"
                    },
                    "version": {
                      "type": "string",
                      "example": "0.11.22"
                    },
                    "collections": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/resources/skyblock/skills": {
      "get": {
        "summary": "Skills",
        "description": "Information regarding skills in the SkyBlock game.",
        "tags": [
          "SkyBlock"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number"
                    },
                    "version": {
                      "type": "string",
                      "example": "0.11.22"
                    },
                    "skills": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/resources/skyblock/items": {
      "get": {
        "summary": "Items",
        "description": "Information regarding items in the SkyBlock game.",
        "tags": [
          "SkyBlock"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SkyBlockItem"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/resources/skyblock/election": {
      "get": {
        "summary": "Election and Mayor",
        "description": "Information regarding the current mayor and ongoing election in SkyBlock.",
        "tags": [
          "SkyBlock"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number"
                    },
                    "mayor": {
                      "type": "object",
                      "description": "Data regarding the current mayor"
                    },
                    "current": {
                      "type": "object",
                      "description": "Data regarding the current election, will not be provided if there is no open election ongoing"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/resources/skyblock/bingo": {
      "get": {
        "summary": "Current Bingo Event",
        "description": "Information regarding the current bingo event and its goals.",
        "tags": [
          "SkyBlock"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "lastUpdated",
                    "id",
                    "name",
                    "start",
                    "end",
                    "modifier",
                    "goals"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number",
                      "format": "int64",
                      "description": "The unix milliseconds timestamp of the last time this data was updated"
                    },
                    "id": {
                      "type": "number",
                      "format": "int32",
                      "description": "The current bingo event ID, increments by 1 for each bingo hosted",
                      "example": 27
                    },
                    "name": {
                      "type": "string",
                      "description": "The display name for the current bingo event",
                      "example": "March 2024"
                    },
                    "start": {
                      "type": "number",
                      "format": "int64",
                      "description": "The start time of the current bingo event in unix milliseconds",
                      "example": 1709269200000
                    },
                    "end": {
                      "type": "number",
                      "format": "int64",
                      "description": "The end time of the current bingo event in unix milliseconds",
                      "example": 1709874000000
                    },
                    "modifier": {
                      "type": "string",
                      "enum": [
                        "NORMAL",
                        "EXTREME",
                        "SECRET"
                      ],
                      "description": "The modifier for the current bingo event",
                      "example": "NORMAL"
                    },
                    "goals": {
                      "type": "array",
                      "description": "The goals for the current bingo event, as well as their progress",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "id": {
                            "description": "The backend ID for this goal",
                            "type": "string"
                          },
                          "name": {
                            "description": "The user friendly display name for this goal",
                            "type": "string"
                          },
                          "lore": {
                            "description": "Description of this goal",
                            "type": "string"
                          },
                          "fullLore": {
                            "description": "The full description of this goal",
                            "type": "array"
                          },
                          "tiers": {
                            "description": "The tiers of this goal, if a global goal",
                            "type": "array",
                            "items": {
                              "type": "number",
                              "format": "int64"
                            }
                          },
                          "progress": {
                            "description": "The global progress of this goal",
                            "type": "number",
                            "format": "int64"
                          },
                          "requiredAmount": {
                            "description": "The required amount for this specific goal",
                            "type": "number",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/skyblock/news": {
      "get": {
        "summary": "News",
        "tags": [
          "SkyBlock"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "items": {
                      "items": {
                        "example": {
                          "item": {
                            "material": "DIAMOND"
                          },
                          "link": "https://hypixel.net",
                          "title": "SkyBlock v0.11",
                          "text": "15th January 2021"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/skyblock/auction": {
      "get": {
        "summary": "Request auction(s) by the auction UUID, player UUID, or profile UUID.",
        "description": "Returns the auctions selected by the provided query. Only one query parameter can be used in a single request, and cannot be filtered by multiple.",
        "tags": [
          "SkyBlock"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uuid",
            "description": "The auction UUID that you wish to request",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "player",
            "description": "The player UUID that you wish to request",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "description": "The profile UUID that you wish to request",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "auctions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SkyBlockAuction"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DataMissing"
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "422": {
            "$ref": "#/components/responses/MalformedData"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/skyblock/auctions": {
      "get": {
        "summary": "Active auctions",
        "description": "Returns the currently active auctions sorted by last updated first and paginated.",
        "tags": [
          "SkyBlock"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "page": {
                      "type": "number"
                    },
                    "totalPages": {
                      "type": "number",
                      "example": 32
                    },
                    "totalAuctions": {
                      "type": "number",
                      "example": 31267
                    },
                    "lastUpdated": {
                      "type": "number",
                      "format": "int64",
                      "example": 1571065561345
                    },
                    "auctions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SkyBlockAuction"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/MissingPage"
          },
          "422": {
            "$ref": "#/components/responses/InvalidPage"
          },
          "503": {
            "$ref": "#/components/responses/NotPopulated"
          }
        }
      }
    },
    "/v2/skyblock/auctions_ended": {
      "get": {
        "summary": "Recently ended auctions",
        "description": "SkyBlock auctions which ended in the last 60 seconds.",
        "tags": [
          "SkyBlock"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number",
                      "format": "int64",
                      "example": 1607456463916
                    },
                    "auctions": {
                      "type": "array",
                      "items": {
                        "example": {
                          "auction_id": "015fe0c67e6041e69797bbe0c2725a21",
                          "seller": "fc76242bf64a4698ae0ebc136d900929",
                          "seller_profile": "85b96cd3e73e4580b8379162ec059141",
                          "buyer": "c1eff55de0d24ec6b44848799e9323ba",
                          "buyer_profile": "a3e1c076533a40a58085e7f43a598bf3",
                          "timestamp": 1607456400329,
                          "price": 190000,
                          "bin": true,
                          "item_bytes": "H4sIAAAAAAAAAEWR3W7TQBCFx2mBxKgtSH2ArUACZKL6L9jtndUYBdHQyGlV7qq1PXZX9U+03kB6yYNw7ffwo/AgiHEC4m7mmz1nz87qACPQhA4A2gAGItUGGjy5qNeV0nTYUzzX4PlNFUvkDzwuUNuD0Uyk+LHgeUOi3zo8S0WzKvjjCPYva4lDoofwsmu9KS95juesaxPDN+GY0FJJrHJ1v4PWxKTDAfGQy4rQB8M2WVKLqqHGy2RdsrKuGoWSPYiiaNjbS/yGBQ3RMo3+TF0Vj+/I5NXWj+2u7Acr0hCbmGbfbdWgd60/5xtmOBM4JPq5p9sofY43W4tfP3+wfyn/++Bfn+91nYJBxS0VlLQoMFGCIvYu6FnvXcenindtMQ++htMT8u11dPH1vWiYUFiyhFcsRiYxq2WO6Qm86NozUkRBFLLl7VU0HcL+F14iHNAg4rRuyYINgg5H4UZJHiglRbxW2AxhVEuRi+qa53CwnF0t7hY30cUsWIbD/jdBj4JP0zC6ozBkul4Teu34Tua7vj124tQduz73xtxOvbGVoZtMbN/xnIyMlSixUbxcwZFln/qn9DX2ue2wxRxgAE93q6b3wR9BYJa/RAIAAA=="
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/skyblock/bazaar": {
      "get": {
        "summary": "Bazaar",
        "description": "Returns the list of products along with their sell summary, buy summary and quick status.\n ### Product Description\n The returned product info has 3 main fields:\n - `buy_summary`\n - `sell_summary`\n - `quick_status`\n\n`buy_summary` and `sell_summary` are the current top 30 orders for each transaction type (in-game example: [Stock of Stonks](https://i.imgur.com/SjRONxq.png)).\n\n`quick_status` is a computed summary of the live state of the product (used for advanced mode view in the bazaar):\n- `sellVolume` and `buyVolume` are the sum of item amounts in all orders.\n - `sellPrice` and `buyPrice` are the weighted average of the top 2% of orders by volume.\n - `movingWeek` is the historic transacted volume from last 7d + live state.\n - `sellOrders` and `buyOrders` are the count of active orders. ",
        "tags": [
          "SkyBlock"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "lastUpdated": {
                      "type": "number",
                      "format": "int64",
                      "example": 1590854517479
                    },
                    "products": {
                      "type": "object",
                      "example": {
                        "INK_SACK:3": {
                          "product_id": "INK_SACK:3",
                          "sell_summary": [
                            {
                              "amount": 20569,
                              "pricePerUnit": 4.2,
                              "orders": 1
                            },
                            {
                              "amount": 140326,
                              "pricePerUnit": 3.8,
                              "orders": 2
                            }
                          ],
                          "buy_summary": [
                            {
                              "amount": 640,
                              "pricePerUnit": 4.8,
                              "orders": 1
                            },
                            {
                              "amount": 640,
                              "pricePerUnit": 4.9,
                              "orders": 1
                            },
                            {
                              "amount": 25957,
                              "pricePerUnit": 5,
                              "orders": 3
                            }
                          ],
                          "quick_status": {
                            "productId": "INK_SACK:3",
                            "sellPrice": 4.2,
                            "sellVolume": 409855,
                            "sellMovingWeek": 8301075,
                            "sellOrders": 11,
                            "buyPrice": 4.99260315136572,
                            "buyVolume": 1254854,
                            "buyMovingWeek": 5830656,
                            "buyOrders": 85
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "$ref": "#/components/responses/NotPopulated"
          }
        }
      }
    },
    "/v2/skyblock/profile": {
      "get": {
        "summary": "Profile by UUID",
        "description": "SkyBlock profile data, such as stats, objectives etc. The data returned can differ depending on the players in-game API settings.",
        "tags": [
          "SkyBlock"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "profile": {
                      "$ref": "#/components/schemas/SkyBlockProfile"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DataMissing"
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "422": {
            "$ref": "#/components/responses/MalformedData"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/skyblock/profiles": {
      "get": {
        "summary": "Profiles by player",
        "tags": [
          "SkyBlock"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "profiles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SkyBlockProfile"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DataMissing"
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "422": {
            "$ref": "#/components/responses/MalformedData"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/skyblock/museum": {
      "get": {
        "summary": "Museum data by profile ID",
        "description": "SkyBlock museum data for all members of the provided profile. The data returned can differ depending on the players in-game API settings.",
        "tags": [
          "SkyBlock"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "profile": {
                      "$ref": "#/components/schemas/SkyBlockMuseum"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "422": {
            "$ref": "#/components/responses/MalformedData"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/skyblock/garden": {
      "get": {
        "summary": "Garden data by profile ID",
        "description": "SkyBlock garden data for the provided profile.",
        "tags": [
          "SkyBlock"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "garden": {
                      "$ref": "#/components/schemas/SkyBlockGarden"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "404": {
            "$ref": "#/components/responses/NoResult"
          },
          "422": {
            "$ref": "#/components/responses/MalformedData"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/skyblock/bingo": {
      "get": {
        "summary": "Bingo data by player",
        "description": "Bingo data for participated events of the provided player.",
        "tags": [
          "SkyBlock"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uuid",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "key",
                          "points",
                          "completed_goals"
                        ],
                        "properties": {
                          "key": {
                            "description": "The id for this event",
                            "type": "number",
                            "format": "int32",
                            "example": 2
                          },
                          "points": {
                            "description": "The amount of points earned",
                            "type": "number",
                            "format": "int32",
                            "example": 117
                          },
                          "completed_goals": {
                            "description": "The completed goal IDs",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": [
                                "stat_walk_speed",
                                "KILL_TRAPPER_MOB"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DataMissing"
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "404": {
            "description": "No data could be found for the provided player uuid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "cause": {
                      "type": "string",
                      "example": "No bingo data could be found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/MalformedData"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/skyblock/firesales": {
      "get": {
        "summary": "Active/Upcoming Fire Sales",
        "description": "Retrieve the currently active or upcoming Fire Sales for SkyBlock.",
        "tags": [
          "SkyBlock"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "sales": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SkyBlockFireSale"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/housing/active": {
      "get": {
        "summary": "The currently active public houses.",
        "tags": [
          "Housing"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HousingHouse"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/housing/house": {
      "get": {
        "summary": "Information about a specific house.",
        "tags": [
          "Housing"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "house",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The UUID of the house to get information about."
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousingHouse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "404": {
            "$ref": "#/components/responses/NoResult"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/housing/houses": {
      "get": {
        "summary": "The public houses for a specific player.",
        "tags": [
          "Housing"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "player",
            "schema": {
              "type": "string"
            },
            "description": "The UUID of the player to get houses for."
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HousingHouse"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/boosters": {
      "get": {
        "summary": "Active Network Boosters",
        "tags": [
          "Other"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get boosters list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "boosters": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/ActiveBooster"
                          },
                          {
                            "$ref": "#/components/schemas/QueuedBooster"
                          }
                        ]
                      }
                    },
                    "boosterState": {
                      "type": "object",
                      "properties": {
                        "decrementing": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/counts": {
      "get": {
        "summary": "Current Player Counts",
        "tags": [
          "Other"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "playerCount": {
                      "type": "integer"
                    },
                    "games": {
                      "type": "object",
                      "example": {
                        "GAME_TYPE": {
                          "players": 2,
                          "modes": {
                            "mode_1": 1,
                            "mode_2": 1
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          }
        }
      }
    },
    "/v2/leaderboards": {
      "get": {
        "summary": "Current Leaderboards",
        "tags": [
          "Other"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "leaderboards": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "503": {
            "$ref": "#/components/responses/NotPopulated"
          }
        }
      }
    },
    "/v2/punishmentstats": {
      "get": {
        "tags": [
          "Other"
        ],
        "summary": "Punishment Statistics",
        "security": [
          {
            "ApiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "watchdog_lastMinute": {
                      "type": "integer"
                    },
                    "staff_rollingDaily": {
                      "type": "integer"
                    },
                    "watchdog_total": {
                      "type": "integer"
                    },
                    "watchdog_rollingDaily": {
                      "type": "integer"
                    },
                    "staff_total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/InvalidKey"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "503": {
            "$ref": "#/components/responses/NotPopulated"
          }
        }
      }
    }
  }
}